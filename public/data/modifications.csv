Name,Priority,Markup,Level,Limit,Expr
"Engine Customization",1,1,1,"Level","-1","Global.EC = Level; Global.ECLevel = Level; Local.base = 0.75 + 0.5 * Level;Global.ECCost = Engine.Cost * Local.base; Cost += Global.ECCost"
"Engine Customization: Speed",2,1,1,"Level","Global.EC >= 0","Global.EC -= Level;Speed += 30 * Level; Local.Max = Speed >> SpeedMax; SpeedMax = Local.Max << SpeedMax * 1.75"
"Engine Customization: Acceleration",2,1,1,"Level","Global.EC >= 0","Global.EC -= Level;Accel += 2 * Level; Local.Max = Accel >> AccelMax; AccelMax = Local.Max << AccelMax * 1.75"
"Engine Customization: Load",2,1,1,"Level","Global.EC >= 0","Global.EC -= Level;Load += 50 * Body * Level; Local.Max = Load >> LoadMax; LoadMax = Local.Max << LoadMax * 1.75"
"Gridlink Power",1,1,0,"","Engine.EngineName == 'Electric*' && Chassis.ChassisType & 1 == 1 && Pilot == -1 && Level == 0",""
"Nitrous Oxide Injectors",1,1,0,"Level","Engine.EngineName == 'Gasoline*' || Engine.EngineName == 'Diesel*' && Level <= 6","Cost += 55 * Level;CFUsed += 1.5;LoadUsed += 15"
"SunCell Power",1,1,0,"","Engine.EngineName == 'Electric*' && Chassis.ChassisType & 17 != 17 && Level == 0","Cost += 5"
"Turbocharging",100,1,0,"Level","Engine.EngineName == 'Gasoline*' || Engine.EngineName == 'Diesel*' || Engine.EngineName == 'Methane*' && Chassis.ChassisType & 8 == 0 || Engine.EngineName == 'Electric*'","Cost += Engine.Cost * 1.75 ^ Level;Speed += 15 * Level; Accel += Level;Sig -= 1 * Level;Economy *= 0.95 ^ Level;Engine.SpeedMax * 0.25 < 15; SpeedMax += 15 ? Engine.SpeedMax * 0.25"
"Adjusted Controls (Dwarf)",1,1,0,"","Level == 0","Cost += 25"
"Adjusted Controls (Troll)",1,1,0,"","Level == 0","Cost += 35"
"Adjusted Controls (Other)",1,1,0,"","Level == 0","Cost += 30"
"Autonav",1,1,0,"Level","Chassis.ChassisType != 17 || Level <= 2 || Global.Rigged && Level <= 4","Cost -= Autonav : 5 10 50 150; Autonav = Level; Cost += Level : 5 10 50 150"
"Contingency Maneuver Controls",1,1,0,"Rating","Level < 10","Cost += Level : 35 70 105 300 375 450 1050 1200 1350; LoadUsed += 25"
"Datajack port",1,1,0,"","Level == 0","Cost += 25;LoadUsed += 10"
"Drive-by-Wire",1,1,0,"Level","Level <= 3","Level > 0;Global.DBW = 10 ? 0; Global.DBWLevel = Level; Handling -= Level; Cost += Chassis.Cost * 1.75 ^ Level - Chassis.Cost"
"Drive-by-Wire: Accel",3,1,0,"Level","Global.DBW >= 0","Global.DBWLevel -= Level;Accel += Level / 100 * Accel"
"Drive-by-Wire: Speed",3,1,0,"Level","Global.DBW >= 0","Global.DBWLevel -= Level;Speed += Level / 100 * Speed"
"Drive-by-Wire: Load",3,1,0,"Level","Global.DBW >= 0","Global.DBWLevel -= Level;Load += Level / 100 * Load"
"Improved Control Surfaces",2,1,0,"Level","Chassis.ChassisType & 2 && Global.DBW == 0 && Level <= 2","Handling -= Level; Cost += Chassis.Cost * 1.40 ^ Level - Chassis.Cost"
"Improved Suspension",2,1,0,"Level","Chassis.ChassisName != '*Tracked' && Chassis.ChassisType & 1 && Global.DBW == 0 && Level <= 2","Handling -= Level; Chassis.ChassisType & 17 == 17; OffRoad -= Level ? 0; Cost += Chassis.Cost * 1.25 ^ Level - Chassis.Cost"
"Off-Road Suspension",1,1,0,"Level","Chassis.ChassisName != '*Tracked' && Chassis.ChassisType & 1 && Level <= 2","Handling += Level; OffRoad -= Level; Speed -= 15; Local.foo = Chassis.ChassisType / 8; Economy *= Local.foo : 1.15 1.3 1.3 1.4; Cost += Chassis.Cost * 1.50 ^ Level - Chassis.Cost"
"Remote-Control Interfaces",1,1,0,"","Level == 0","Pilot = 1; Cost += 25 * Body"
"Remote Pilot Advanced Programming",2,1,0,"Rating","Pilot >= 0 && Level <= 5","Cost -= Pilot : 0 50 250 1250 5000; Pilot = Level; Cost += Level : 0 50 250 1250 5000; Security = Security >> Level : 0 0 0 1 0; Military = Military >> Level : 0 0 0 0 1"
"Rigger Adaptation",1,1,0,"","Level == 0","Cost += 35; Global.Rigged = 1"
"Secondary Controls",1,1,0,"","Chassis.ChassisType != 17 && Level == 0","CFUsed += 1; Cost += 5"
"Standard Armour",1,1,0,"Armour","-1","Armour += Level; LoadUsed += Body * Body * 5 * Level; Handling += Level / 6; Cost += 50 * Level"
"Concealed Armour",1,1,0,"Armour","-1","Armour += Level; LoadUsed += Body * Body * 5 * Level; CFUsed += 2 * Level; Cost += 50 * Level"
"Ablative Armour",1,1,1,"Armour","Level <= 3","LoadUsed += Body * 100; Armour += 2 * Level; Local.lev = Level + 2; Local.cost = Local.lev * Local.lev * 100; Level > 1; Cost += Local.cost ? 700"
"Advanced Passenger Protection Systems",1,1,0,"Seats","Chassis.ChassisType & 17 != 17","Cost += 30 * Level"
"Crash Cages",1,1,0,"","Chassis.ChassisType & 17 != 17 && Level == 0","LoadUsed += 10; Cost += 40"
"EnviroSeal (gas)",1,1,0,"","Level == 0 && Chassis.ChassisType != 17","Global.ES = -1; Cost += Body * 3"
"EnviroSeal (water)",1,1,0,"","Level == 0 && Chassis.ChassisType != 17","Global.ES = -1; Cost += Body * 10"
"EnviroSeal (engine)",1,1,0,"","Level == 0 && Chassis.ChassisType != 17","Global.ES = -1; Cost += Body * 15"
"EnviroSeal: overpressurization",2,1,0,"","Global.ES && Level == 0 && Chassis.ChassisType != 17","LoadUsed += 10; CFUsed += 1; Cost += Body * 75"
"Life Support Systems",1,1,0,"Man-hours","Global.ES","LoadUsed += Level / 10 * 25; CFUsed += Level / 10; Cost += 5 + Level"
"Roll Bars",1,1,0,"","Level == 0","Global.RollBars = 1"
"Smart Armour Systems (SAS)",1,1,0,"","Level == 0","Military = 1; LoadUsed += Body * 50 * Armour; CFUsed += 2; Cost += 250"
"Thermal Baffles",1,1,0,"Level","Engine.EngineName != 'Sail*' && Engine.EngineName != 'Electric*'; Level <= 2","LoadUsed += Level * Body * 50;Sig += Level;Cost += 75 * Level"
"Active Thermal Masking",2,1,0,"Level","Chassis.ChassisType != 17 && Engine.EngineName != 'Sail*' && Engine.EngineName != 'Electric*' && Level <= 2 << Global.ECLevel","Sig += Level; CFUsed += 3; LoadUsed += 100; Cost += Global.ECCost * Level : 0 0.2 0.45"
"Radar-Absorbent Materials (RAM)",1,1,0,"Level","Level <= 3","Military = 1; Sig += Level; Cost += Level ^ 3 * 50"
"Fixed mount, ext Firmpoint",1,1,0,"Quantity","Body >= Global.Points","Global.Points += Level; LoadUsed += 10 * Level; CFUsed += 0.5 * Level; Cost += 10 * Level; Sig -= Level; Security = 1 - Military"
"Fixed mount, int Firmpoint",1,1,0,"Quantity","Body >= Global.Points","Global.Points += Level; LoadUsed += 10 * Level; CFUsed += 3 * Level; Cost += 20 * Level; Security = 1 - Military"
"Fixed mount, ext Hardpoint",2,1,0,"Quantity","Chassis.ChassisType & 17 != 17 || Global.SideCar > 0 && Body >= Global.Points","Global.SideCar -= 1; Global.Points += 2 * Level; LoadUsed += 10 * Level; CFUsed += 1 * Level; Cost += 25 * Level;  Sig -= Level; Security = 1 - Military"
"Fixed mount, int Hardpoint",2,1,0,"Quantity","Chassis.ChassisType & 17 != 17 || Global.SideCar > 0 && Body >= Global.Points","Global.SideCar -= 1; Global.Points += 2 * Level; LoadUsed += 10 * Level; CFUsed += 4 * Level; Cost += 35 * Level; Security = 1 - Military"
"Gunnery Recoil Adjusters (fixed firm)",1,1,0,"Level","Level <= 4","Global.GRA = -1; Cost += 10 * Level"
"Gunnery Recoil Adjusters (micro turret)",1,1,0,"Level","Level <= 4","Global.GRA = -1; Cost += 10 * Level"
"Gunnery Recoil Adjusters (mini turret)",1,1,0,"Level","Level <= 6","Global.GRA = -1; Cost += 10 * Level"
"Gunnery Recoil Adjusters (small turret)",1,1,0,"Level","Level <= 9","Global.GRA = -1; Cost += 10 * Level"
"Gunnery Recoil Adjusters (fixed hard)",1,1,0,"Level","Level <= 9","Global.GRA = -1; Cost += 10 * Level"
"Gunnery Recoil Adjusters (medium turret)",1,1,0,"Level","Level <= 12","Global.GRA = -1; Cost += 10 * Level"
"Gunnery Recoil Adjusters (large turret)",1,1,0,"Level","Level <= 12","Global.GRA = -1; Cost += 10 * Level"
"External Rocket Mounts",2,1,0,"Quantity","Security >> Military == 1 || Global.RollBars != 0 && Body >= Global.Points","Global.Points += Level; Chassis.ChassisType & 8; Sig -= Level / 2 ? 1; Security = 1 - Military"
"Internal Rocket Mounts",2,1,0,"Quantity","Chassis.ChassisType & 8; Level ? 0 <= Body / 2 && Body >= Global.Points","Global.Points += Level; CFUsed += Level + Level * 1.5; Security = 1 - Military"
"Pintle Mounts",1,1,0,"Quantity","Body >= Global.Points","Global.Points += Level; Cost += Level; Security = 1 - Military"
"Ring Mounts",2,1,0,"Quantity","Global.RagTop == 0 || Global.RollBars != 0 && Body >= Global.Points","Global.Points += 2 * Level; Chassis.ChassisType == 72; CFUsed += 16 ? 1; LoadUsed += 25; Cost += 10; Security = 1 - Military"
"Smartlink Integration Kits",1,1,1,"Level","Level <= 2","Cost += Level : 250 350"
"Turrets (mini)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += 2 * Level; Sig -= Level; Global.TMini += Level; Global.TMiniCF += 6 * Level; CFUsed += 6 * Level; LoadUsed += 25 * Level; Global.TMiniCost += 125 * Level; Cost += 125 * Level; Security = 1 - Military"
"Turrets (small)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += 2 * 2 * Level; Sig -= Level; Global.TSmall += Level; Global.TSmall += 7 * Level; CFUsed += 7 * Level; LoadUsed += 100 * Level; Global.TSmallCost += 250 * Level; Cost += 250 * Level; Security = 1 - Military"
"Turrets (medium)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += 3 * 2 * Level; Sig -= Level; Global.TMedium += Level; Global.TMediumCF += 16 * Level; CFUsed += 16 * Level; LoadUsed += 1000 * Level; Global.TMediumCost += 500 * Level; Cost += 500 * Level; Security = 1 - Military"
"Turrets, Remote (micro)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += Level; Sig -= Level; Global.TMicro += Level; Global.TMicroCF += 0 * Level; LoadUsed += 10 * Level; Global.TMicroCost += 100 * Level; Cost += 100 * Level; Security = 1 - Military"
"Turrets, Remote (mini)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += 2 * Level; Sig -= Level; Global.TMini += Level; Global.TMiniCF += 3 * Level; CFUsed += 3 * Level; LoadUsed += 25 * Level; Global.TMiniCost += 175 * Level; Cost += 175 * Level; Security = 1 - Military"
"Turrets, Remote (small)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += 2 * 2 * Level; Sig -= Level; Global.TSmall += Level; Global.TSmallCF += 4 * Level; CFUsed += 4 * Level; LoadUsed += 100 * Level; Global.TSmallCost += 350 * Level; Cost += 350 * Level; Security = 1 - Military"
"Turrets, Remote (medium)",1,1,0,"Quantity","Body >= Global.Points","Global.Points += 3 * 2 * Level; Sig -= Level; Global.TMedium += Level; Global.TMediumCF += 4 * Level; CFUsed += 4 * Level; LoadUsed += 1000 * Level; Global.TMediumCost += 600 * Level; Cost += 600 * Level; Security = 1 - Military"
"Turrets: Anti-Aircraft (micro)",2,1,0,"","Body >= Global.Points","CFUsed += Global.TMicro; Cost += Global.TMicroCost * 1.5"
"Turrets: Anti-Aircraft (mini)",2,1,0,"","Body >= Global.Points","CFUsed += Global.TMini; Cost += Global.TMiniCost * 1.5"
"Turrets: Anti-Aircraft (small)",2,1,0,"","Body >= Global.Points","CFUsed += Global.TSmall; Cost += Global.TSmallCost * 1.5"
"Turrets: Anti-Aircraft (medium)",2,1,0,"","Body >= Global.Points","CFUsed += Global.TMedium; Cost += Global.TMediumCost * 1.5"
"Turrets: Pop-Up (micro)",3,1,0,"","Body >= Global.Points","CFUsed += Global.TMini"
"Turrets: Pop-Up (mini)",3,1,0,"","Body >= Global.Points","CFUsed += Global.TMiniCF"
"Turrets: Pop-Up (small)",3,1,0,"","Body >= Global.Points","CFUsed += Global.TSmallCF"
"Turrets: Pop-Up (medium)",3,1,0,"","Body >= Global.Points","CFUsed += Global.TMediumCF"
"Vehicle Gyroscopic Stabilizers",2,1,0,"Level","Global.GRA == 0 && Level <= 2 * Body","CFUsed += 1; LoadUsed += 24 + Level; Cost += 15 * Level; Level > Body; Local.Handling = Level ? Body; Local.Handling -= Body; Handling += Local.Handling; OffRoad += Local.Handling"
"BattleTac FDDM Receiver Module",2,1,0,"Level","Pilot >= 0 && Level == 0","Pilot >= 0; Cost += Pilot * 350 ? 0"
"BattleTac IVIS Receiver Module",2,1,0,"Level","Pilot >= 0 && Level == 0","Pilot >= 0; Cost += Pilot * 250 ? 0"
"ECM",1,1,0,"Level","Level <= 10","Security = Security >> Level : 0 0 0 0 1 1 1 0 0 0; Military = Military >> Level : 0 0 0 0 0 0 0 1 1 1; CFUsed += Level : 0 1 2 3 2 4 6 10 12 16; LoadUsed += Level : 12 25 35 50 35 75 110 150 200 250; Cost += Level : 250 750 1250 2500 1250 1500 5000 7500 12500 25000"
"ECCM",1,1,0,"Level","Level <= 10","Security = Security >> Level : 0 0 0 0 1 1 1 0 0 0; Military = Military >> Level : 0 0 0 0 0 0 0 1 1 1; CFUsed += Level : 0 1 2 3 2 4 6 10 12 16; LoadUsed += Level : 12 25 36 50 35 75 110 150 200 250; Cost += Level : 100 300 500 1000 500 750 2000 3500 5000 10000"
"ED",1,1,0,"Level","Level <= 6","Security = 1; Military = Military >> Level : 0 0 0 1 1 1; CFUSed += Level : 2 4 6 4 6 8; LoadUsed += Level : 35 45 60 45 60 110; Cost += Level : 150 400 1000 2500 10000 20000"
"ECD",1,1,0,"Level","Level <= 6","Security = 1; Military = Military >> Level : 0 0 0 1 1 1; CFUSed += Level : 2 4 6 4 6 8; LoadUsed += Level : 35 45 60 45 60 110; Cost += Level : 100 300 800 3000 8000 20000"
"Electronic Ports",1,1,0,"Level","-1","Global.Ports = Level; Cost += 10"
"Power Amplifiers",1,1,0,"Level","Level <= 10","CFUsed += Level / 4; LoadUsed += Level; Cost +=  5 * Level"
"Sensors",1,1,1,"Level","Level <= 10 - Chassis.Sensor","Sensor < 1; Cost -= 0 ? Sensor : 50 150 250 500 250 300 1000 1500 2500 5000; CFUsed -= 0 ? Sensor : 0 1 2 3 2 4 6 10 12 16; LoadUsed -= 0 ? Sensor : 12 25 35 50 35 75 110 150 200 250; Sensor += Level; Security = Security >> Sensor : 0 0 0 0 1 1 1 0 0 0; Military = Military >> Sensor : 0 0 0 0 0 0 0 1 1 1; CFUsed += Sensor : 0 1 2 3 2 4 6 10 12 16; LoadUsed += Sensor : 12 25 35 50 35 75 110 150 200 250; Cost += Sensor : 50 150 250 500 250 300 1000 1500 2500 5000"
"Aircraft Drop Tanks",2,1,0,"Pairs","Chassis.ChassisType & 8 && Body >= Global.Points","Global.Points += 2 * Level; Fuel += 2000 * Level; Sig -= Level; Speed -= Level; Handling += Level; Cost += 32 * Level"
"Amphibious Operation Package",1,1,0,"Level","Chassis.ChassisType & 1 && Level <= 3","CFUsed += Level : 0 0 2; Cost += Level : 25 80 200"
"Anti-Theft System",1,1,0,"Level","Level <= 10","Global.AntiTheft = -1; Cost += Level : 1 2 3 16 20 24 70 80 90 500"
"Anti-Theft System: Shock option",2,1,0,"Level","Global.AntiTheft && Level == 0","Cost += 20"
"Bench Seats",1,1,0,"Level","-1","Global.Benches += Level; CFUsed += 6 * Level; LoadUsed += 150 * Level"
"Bench Seats: Armour",2,1,0,"Level","Level <= 2 * Global.Benches","Cost += 12 * Level"
"Bench Seats (Folding)",1,1,0,"Level","-1","Global.Benches += Level; CFUsed += 6 * Level; LoadUsed += 150 * Level"
"Bench Seats (Reinforced)",1,1,0,"Level","-1","Global.Benches += Level; CFUsed += 8 * Level; LoadUsed += 300 * Level; Cost += 5 * Level"
"Bucket Seats",1,1,0,"Level","-1","Global.Buckets += Level; CFUsed += 6 * Level; LoadUsed += 150 * Level"
"Bucket Seats: Armour",2,1,0,"Level","Level <= 2 * Global.Buckets","Cost += 12 * Level"
"Bucket Seats (Reinforced)",1,1,0,"Level","-1","Global.Buckets += Level; Global.RBuckets += Level; CFUsed += 8 * Level; LoadUsed += 250 * Level; Cost += 5 * Level"
"Bucket Seats (Extra Big Reinforced)",1,1,0,"Level","-1","Global.Buckets += Level; Global.RBuckets += Level; CFUsed += 8 * Level; LoadUsed += 350 * Level; Cost += 5 * Level"
"Convertible Top",1,1,0,"Level","Level == 0","Global.RagTop = -1"
"Crane",1,1,0,"Level","Level <= Body","CFUsed += 15; LoadUsed += Body * 80; Cost += 2 * Level : 25 200 750 2000 5000 20000 30000 45000 60000 75000"
"Drone Rack",1,1,0,"Level","-1","Cost += Body * 12; CFUsed += Level; LoadUsed += 45"
"Floatation Packages (Aircraft)",1,1,0,"Level","Level == 0 && Chassis.ChassisType & 8","Economy += Engine.Economy * 0.2; Chassis.ChassisType & 64; Speed *= 0.9 ? 0.5; Cost += Chassis.Cost * 1.2"
"Hovercraft Water Seals",1,1,0,"Level","Level == 0 && Chassis.ChassisType & 4","Cost += Body * 5"
"Mechanical Arm #1",1,1,0,"Level","-1","Cost += Body * 250; CFUsed += 2; Level < 4; Cost += Level * 8000 ? 10000; Local.Strength = Body * Body + Level; LoadUsed += Local.Strength * 25"
"Mechanical Arm #2",1,1,0,"Level","-1","Cost += Body * 250; CFUsed += 2; Level < 4; Cost += Level * 8000 ? 10000; Local.Strength = Body * Body + Level; LoadUsed += Local.Strength * 25"
"Mechanical Arm #3",1,1,0,"Level","-1","Cost += Body * 250; CFUsed += 2; Level < 4; Cost += Level * 8000 ? 10000; Local.Strength = Body * Body + Level; LoadUsed += Local.Strength * 25"
"Mechanical Arm #4",1,1,0,"Level","-1","Cost += Body * 250; CFUsed += 2; Level < 4; Cost += Level * 8000 ? 10000; Local.Strength = Body * Body + Level; LoadUsed += Local.Strength * 25"
"Sidecar",1,1,0,"Level","Level <= 3 && Chassis.ChassisType == 17","Global.SideCar = 2; Local.CF = Level : 4 8 12; CF += Local.CF; CFMax += Local.CF; Handling += Level : 1 1 2; Cost += Level : 10 20 35; Speed -= 15; Economy *= 0.9"
"Spotlights",1,1,0,"Level","Level == 0","Cost += 6"
"Tires (Standard)",1,1,0,"Level","-1","Cost += Body * Level * 50"
"Tires (Performance)",1,1,0,"Level","-1","Cost += Body * Level * 75"
"Tires (Off-road)",1,1,0,"Level","-1","Cost += Body * Level * 125"
"Tires (Dual-Purpose)",1,1,0,"Level","-1","Cost += Body * Level * 250"
"Tires Option: Runflat",1,1,0,"Level","-1","Cost += Level * 200"
"Tires Option: Spare",1,1,0,"Level","-1","CFUsed += Body / 2 * Level"
"Winches",1,1,0,"Level","Level <= Body","LoadUsed += Body * 2.5; Level < 1; Cost += 5 ? Level : 25 200 750 2000 5000 20000 30000 45000 60000 75000"